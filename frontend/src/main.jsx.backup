// frontend/src/main.jsx
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App.jsx';
import './index.css';

// Error boundary for better error handling
class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false, error: null };
  }

  static getDerivedStateFromError(error) {
    return { hasError: true, error };
  }

  componentDidCatch(error, errorInfo) {
    console.error('Error caught by boundary:', error, errorInfo);
  }

  render() {
    if (this.state.hasError) {
      return (
        <div className="flex flex-col items-center justify-center min-h-screen p-5 text-center bg-slate-900 text-slate-100">
          <h1 className="text-4xl font-bold mb-4">Oops! Something went wrong</h1>
          <p className="mb-6 text-slate-300 max-w-md">
            The Lazy Programmer's Assistant encountered an error. Don't worry, even AIs have bad days.
          </p>
          <button
            onClick={() => window.location.reload()}
            className="px-6 py-3 rounded-lg border-0 bg-indigo-600 text-white cursor-pointer text-base font-medium hover:bg-indigo-700 transition-colors"
          >
            Reload Page
          </button>
          <details className="mt-6 text-sm text-slate-400 max-w-2xl">
            <summary className="cursor-pointer hover:text-slate-200 transition-colors">
              Error Details (for the curious)
            </summary>
            <pre className="mt-4 p-4 bg-slate-800 rounded text-left text-xs overflow-auto max-h-40">
              {this.state.error?.toString()}
            </pre>
          </details>
        </div>
      );
    }

    return this.props.children;
  }
}

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <ErrorBoundary>
      <App />
    </ErrorBoundary>
  </React.StrictMode>
);

// frontend/src/services/supabase.js
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  throw new Error('Missing Supabase environment variables. Please check your .env file.');
}

export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    persistSession: true,
    storageKey: 'lpa-auth',
    storage: window.localStorage,
  },
  realtime: {
    params: {
      eventsPerSecond: 10,
    },
  },
});

// Helper to get current user
export const getCurrentUser = () => {
  return supabase.auth.getUser();
};

// Helper to get current session
export const getCurrentSession = () => {
  return supabase.auth.getSession();
};

// frontend/src/styles/index.css
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;600;700&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    @apply h-full;
  }

  body {
    @apply h-full bg-dark-900 text-dark-100 font-sans antialiased;
  }

  #root {
    @apply h-full flex flex-col;
  }

  code {
    @apply font-mono;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    @apply w-2;
  }

  ::-webkit-scrollbar-track {
    @apply bg-dark-800;
  }

  ::-webkit-scrollbar-thumb {
    @apply bg-dark-600 rounded;
  }

  ::-webkit-scrollbar-thumb:hover {
    @apply bg-dark-500;
  }

  /* Selection colors */
  ::selection {
    @apply bg-primary-500 text-white;
  }

  ::-moz-selection {
    @apply bg-primary-500 text-white;
  }

  /* Focus styles */
  *:focus-visible {
    @apply outline-2 outline-primary-500 outline-offset-2;
  }
}

@layer components {
  /* Utility classes */
  .text-gradient {
    @apply bg-gradient-to-br from-primary-500 to-secondary-500 bg-clip-text text-transparent;
  }

  .glass {
    @apply bg-white/5 backdrop-blur-sm border border-white/10;
  }

  .glass-dark {
    @apply bg-black/30 backdrop-blur-sm border border-white/10;
  }

  /* Button variants */
  .btn-gradient {
    @apply bg-gradient-primary hover:opacity-90 transition-opacity;
  }

  .btn-glass {
    @apply glass hover:bg-white/10 transition-colors;
  }

  /* Card variants */
  .card-glass {
    @apply glass rounded-xl p-6;
  }

  .card-gradient {
    @apply bg-gradient-dark rounded-xl p-6 border border-white/10;
  }

  /* Animation classes */
  .animate-fade-in {
    @apply animate-fade-in;
  }

  .animate-slide-up {
    @apply animate-slide-up;
  }

  .animate-pulse-gentle {
    @apply animate-pulse-slow;
  }
}

@layer utilities {
  /* Print styles */
  @media print {
    .no-print {
      @apply hidden;
    }
    
    body {
      @apply bg-white text-black;
    }
  }

  /* Accessibility improvements */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .text-gradient {
      @apply text-blue-600;
    }
  }

  /* Responsive text sizes */
  @media (max-width: 768px) {
    html {
      font-size: 14px;
    }
  }
}